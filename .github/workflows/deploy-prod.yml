name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (git tag)'
        required: true
        type: string

env:
  AZURE_RESOURCE_GROUP: rg-loan-system-prod
  ACR_NAME: loansystemacr
  CONTAINER_APP_NAME: loan-system-app-prod
  CONTAINER_APP_ENV: loan-system-env-prod

jobs:
  deploy:
    name: Deploy to Azure Production
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://loan-system.azurecontainerapps.io
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version || github.event.release.tag_name }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_PROD }}

      - name: Build and push to ACR
        run: |
          VERSION=${{ github.event.inputs.version || github.event.release.tag_name }}
          az acr build \
            --registry ${{ env.ACR_NAME }} \
            --image loan-system:${VERSION} \
            --image loan-system:prod-latest \
            --file infrastructure/docker/Dockerfile.prod \
            .

      - name: Deploy to Container Apps
        run: |
          VERSION=${{ github.event.inputs.version || github.event.release.tag_name }}
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/loan-system:${VERSION} \
            --set-env-vars \
              NODE_ENV=production \
              DATABASE_HOST=${{ secrets.DB_HOST_PROD }} \
              DATABASE_PORT=${{ secrets.DB_PORT_PROD }} \
              DATABASE_USER=${{ secrets.DB_USER_PROD }} \
              DATABASE_PASSWORD=${{ secrets.DB_PASSWORD_PROD }} \
              DATABASE_NAME=${{ secrets.DB_NAME_PROD }}

      - name: Verify deployment
        run: |
          sleep 30
          curl -f https://loan-system.azurecontainerapps.io/health || exit 1

      - name: Create deployment record
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ github.event.inputs.version || github.event.release.tag_name }}',
              environment: 'production',
              required_contexts: [],
              auto_merge: false
            });